#!/bin/python

# This script is to process the AHBA expression data via different combination of parameters
# The resulting gene lists was compared with the gene list generated by Anderson et al 2020 NatCom
# Details for the finalized parameter combo is in '01_tutorial.ipynb', Part 3.

import pandas as pd
import abagen
import os.path

# set up dirs
base_dir = '/Volumes/GoogleDrive/My Drive/Gradient_Shift_Cellular_Basis/Milgram'
data_dir = os.path.join(base_dir,'para','data','ahba')
files = abagen.fetch_microarray(donors='all', data_dir=base_dir)

# Part 1: process the data
expression, coords = abagen.get_samples_in_mask(mask=None,norm_structures='cortex',return_report=True,verbose=1)


# Part 2: fine-tune the parameters of pipeline
# function for parameter fine-tunning
# We set the default parameter use as displayed below, but the final parameter combination is different from the default ones.
def preprocess_ahba(para_change, ibf_threshold=0.5, probe_selection='diff_stability',
                    sample_norm='scaled_robust_sigmoid', gene_norm='scaled_robust_sigmoid'):

    # Step1: process the data
    expression, coords = abagen.get_samples_in_mask(mask=None,
                                                    ibf_threshold=ibf_threshold,
                                                    probe_selection=probe_selection,
                                                    sample_norm=sample_norm,
                                                    gene_norm=gene_norm,
                                                    norm_structures='cortex',
                                                    return_report=True,
                                                    verbose=1)
    # output the expression matrix to csv
    expression_dir = os.path.join(data_dir, f'ahba_group_samples_expression_{para_change}.csv')
    expression.to_csv(expression_dir,index=False)

    # Output the Gene Names (Symbols) for later Gene Symbols-Entrez ID conversion in R
    gene_symbols = expression.columns.tolist()
    gene_symbols = pd.DataFrame(gene_symbols)
    gene_symbols.to_csv(os.path.join(data_dir,f'ahba_expression_gene_names_{para_change}.csv'),index=False,header=False)

    # Step2: Update the MNI coordinates of the original sample info
    # load the original table
    ahba_sampleInfo_dir = os.path.join(data_dir,'ahba_sampleInfo.csv')
    ahba_sampleInfo = pd.read_csv(ahba_sampleInfo_dir)
    sample_info_vertex_reannot_mapped = pd.read_csv(os.path.join(data_dir,'sample_info_vertex_reannot_mapped.csv'))
    # match the coordinates names
    coords = coords.rename(columns={"x": "mni_x", "y": "mni_y","z":"mni_z"})
    # set the well_id as index
    ahba_sampleInfo = ahba_sampleInfo.set_index('well_id')
    #coords = coords.set_index('well_id')
    sample_info_vertex_reannot_mapped = sample_info_vertex_reannot_mapped.set_index('well_id')
    # replace the original mni coordinates with reannotated coordinates
    ahba_sampleInfo.update(coords)

    # Step3: make the table only contains rows overlapping with abagen expression matrix
    # select by intersected indices
    ahba_sampleInfo = ahba_sampleInfo[ahba_sampleInfo.index.isin(coords.index)]
    sample_info_vertex_reannot_mapped = sample_info_vertex_reannot_mapped[sample_info_vertex_reannot_mapped.index.isin(coords.index)]
    # set back the previous index
    ahba_sampleInfo.reset_index(inplace=True)
    sample_info_vertex_reannot_mapped.reset_index(inplace=True)

    # Step4: Save them
    # save it
    ahba_sampleInfo.to_csv(os.path.join(data_dir,f'ahba_sampleInfo_reannot_{para_change}.csv'),index=False)
    sample_info_vertex_reannot_mapped.to_csv(os.path.join(data_dir,f'sample_info_vertex_reannot_mapped_{para_change}.csv'),index=False)

# para1: QC thresholds
thresholds = [0.1, 0.3, 0.5]

for i in list(range(3)):
    preprocess_ahba(para_change=thresholds[i], ibf_threshold=thresholds[i], probe_selection='diff_stability',
                    sample_norm='scaled_robust_sigmoid', gene_norm='scaled_robust_sigmoid')

# para2: Probe Selection Method
preprocess_ahba(para_change='ProbeMax', ibf_threshold=0.5, probe_selection='max_intensity',
                    sample_norm='scaled_robust_sigmoid', gene_norm='scaled_robust_sigmoid')

# para3: Normalization Method
preprocess_ahba(para_change='NormZscore', ibf_threshold=0.5, probe_selection='diff_stability',
                    sample_norm='zscore', gene_norm='zscore')
